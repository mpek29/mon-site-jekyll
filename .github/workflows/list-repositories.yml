name: List Repositories

on:
  push:
    branches:
      - master  # Trigger workflow on push to the master branch
  workflow_dispatch:  # Allow manual execution of the workflow

jobs:
  list_repositories:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Fetch the list of repositories for the user "mpek29" and store it in a variable
      - name: Store repositories in a variable
        id: list_repositories
        run: |
          echo "Fetching repository list..."
          REPO_LIST=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                            -H "Accept: application/vnd.github.v3+json" \
                            https://api.github.com/users/mpek29/repos?type=all | \
                            jq -r '.[] | "\(.name) \(.description) \(.html_url)"' | tr '\n' ' ')
          echo "REPO_LIST=$REPO_LIST" >> $GITHUB_ENV  # Store in environment variable for later steps

      # Create Markdown files for each repository in the _projects folder
      - name: Create Markdown files
        run: |
          echo "Creating Markdown files for each repository..."
          IFS=' ' read -r -a repos <<< "$REPO_LIST"  # Convert REPO_LIST to an array
          mkdir -p _projects  # Create _projects directory if it doesn't exist
          for ((i=0; i<${#repos[@]}; i+=3)); do
            repo_name="${repos[i]}"
            repo_description="${repos[i+1]}"
            repo_url="${repos[i+2]}"
            importance=$((i / 3 + 1))  # Set importance based on the order in the list

            # Create the Markdown file with the specified content
            cat <<EOF > "_projects/$repo_name.md"
---
layout: page
title: $repo_name
description: $repo_description
img: assets/img/projects/${repo_name// /_}/main.png  # Replace spaces with underscores for image path
importance: $importance
git: $repo_url
category: 2025
---
EOF
            echo "Created _projects/$repo_name.md"
          done

      # Optional: Stage the changes and commit them
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add _projects/*.md
          git commit -m "Add Markdown files for repositories" || echo "No changes to commit"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token to authenticate
